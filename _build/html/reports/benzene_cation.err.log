Traceback (most recent call last):
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/blink/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/blink/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from shmo import HuckelSolver

Result = HuckelSolver(z,n)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[2], line 3[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mshmo[39;00m [38;5;28;01mimport[39;00m HuckelSolver
[0;32m----> 3[0m Result [38;5;241m=[39m HuckelSolver(z,n)

File [0;32m~/Documents/GitHub/SHMOT/shmo.py:30[0m, in [0;36mHuckelSolver.__init__[0;34m(self, data, num_electrons)[0m
[1;32m     28[0m     [38;5;28mself[39m[38;5;241m.[39mnum_electrons [38;5;241m=[39m [38;5;241m0[39m
[1;32m     29[0m [38;5;28;01melse[39;00m:
[0;32m---> 30[0m     [38;5;28mself[39m[38;5;241m.[39mset_data(data,num_electrons)

File [0;32m~/Documents/GitHub/SHMOT/shmo.py:53[0m, in [0;36mHuckelSolver.set_data[0;34m(self, data, num_electrons)[0m
[1;32m     50[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m0[39m [38;5;241m<[39m [38;5;28mself[39m[38;5;241m.[39mnum_electrons [38;5;241m<[39m[38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mdata[38;5;241m.[39mshape[[38;5;241m0[39m][38;5;241m*[39m[38;5;241m2[39m):
[1;32m     51[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mNumber of electrons([39m[38;5;132;01m%d[39;00m[38;5;124m) must be greater than zero and less than or equal to 2*number of atoms ([39m[38;5;132;01m%d[39;00m[38;5;124m)[39m[38;5;124m"[39m [38;5;241m%[39m([38;5;28mself[39m[38;5;241m.[39mnum_electrons,[38;5;28mself[39m[38;5;241m.[39mdata[38;5;241m.[39mshape[[38;5;241m0[39m][38;5;241m*[39m[38;5;241m2[39m))
[0;32m---> 53[0m [38;5;28mself[39m[38;5;241m.[39m_solve()

File [0;32m~/Documents/GitHub/SHMOT/shmo.py:63[0m, in [0;36mHuckelSolver._solve[0;34m(self)[0m
[1;32m     61[0m [38;5;28mself[39m[38;5;241m.[39m_solve_eigens()
[1;32m     62[0m [38;5;28mself[39m[38;5;241m.[39m_populate_levels()
[0;32m---> 63[0m [38;5;28mself[39m[38;5;241m.[39m_calc_bond_orders()
[1;32m     64[0m [38;5;28mself[39m[38;5;241m.[39m_calc_charges()
[1;32m     65[0m [38;5;28mself[39m[38;5;241m.[39m_calc_aa_polarizability()

File [0;32m~/Documents/GitHub/SHMOT/shmo.py:105[0m, in [0;36mHuckelSolver._calc_bond_orders[0;34m(self)[0m
[1;32m    103[0m [38;5;250m[39m[38;5;124;03m"""calculate pi bond orders for system"""[39;00m
[1;32m    104[0m size [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mdata[38;5;241m.[39mshape[[38;5;241m0[39m]
[0;32m--> 105[0m [38;5;28mself[39m[38;5;241m.[39mbond_orders [38;5;241m=[39m numpy[38;5;241m.[39mmat(numpy[38;5;241m.[39mzeros((size,size),numpy[38;5;241m.[39mfloat))
[1;32m    106[0m [38;5;28;01mfor[39;00m ii [38;5;129;01min[39;00m [38;5;28mrange[39m(size):
[1;32m    107[0m     [38;5;28;01mfor[39;00m jj [38;5;129;01min[39;00m [38;5;28mrange[39m(ii,size):

File [0;32m~/anaconda3/lib/python3.11/site-packages/numpy/__init__.py:305[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    300[0m     warnings[38;5;241m.[39mwarn(
[1;32m    301[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[1;32m    302[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    304[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[0;32m--> 305[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[1;32m    307[0m [38;5;66;03m# Importing Tester requires importing all of UnitTest which is not a[39;00m
[1;32m    308[0m [38;5;66;03m# cheap import Since it is mainly used in test suits, we lazy import it[39;00m
[1;32m    309[0m [38;5;66;03m# here to save on the order of 10 ms of import time for most users[39;00m
[1;32m    310[0m [38;5;66;03m#[39;00m
[1;32m    311[0m [38;5;66;03m# The previous way Tester was imported also had a side effect of adding[39;00m
[1;32m    312[0m [38;5;66;03m# the full `numpy.testing` namespace[39;00m
[1;32m    313[0m [38;5;28;01mif[39;00m attr [38;5;241m==[39m [38;5;124m'[39m[38;5;124mtesting[39m[38;5;124m'[39m:

[0;31mAttributeError[0m: module 'numpy' has no attribute 'float'.
`np.float` was a deprecated alias for the builtin `float`. To avoid this error in existing code, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
AttributeError: module 'numpy' has no attribute 'float'.
`np.float` was a deprecated alias for the builtin `float`. To avoid this error in existing code, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

